{"version":3,"sources":["images/header.png","components/rejestracja/DodajPasazera.js","components/rejestracja/DodajBagaz.js","components/loty/ListaLotow.js","components/loty/SzukajLotow.js","components/rezerwacja/Instrukcja.js","components/rezerwacja/NowaRezerwacja.js","components/admin/AdminPanel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ItemListerPasazer","props","pasazer","DodajPasazera","useState","setPasazer","imie","setImie","nazwisko","setNazwisko","pesel","setPesel","obywatelstwo","setObywatelstwo","onSubmit","fetch","method","headers","Accept","body","JSON","stringify","htmlFor","id","type","value","autoComplete","onChange","event","target","onClick","then","res","console","log","json","DodajBagaz","id_rezerwacja","setId","waga","setWaga","response","ItemListerLot","loty","map","lot","key","id_lot","className","lotnisko_wylot","wylot","lotnisko_przylot","przylot","ListaLotow","miasto","setMiasto","setLoty","handleMiastoChange","preventDefault","dataType","handleMiastoChange2","name","SzukajLotow","setWylot","setPrzylot","Instrukcja","Component","ItemListerMiejsca","wolneMsc","msc","miejsce","ItemListerIdRezerwacji","id_rez","ItemListerSamolot","samolot","one","id_pracownik","marka","model","NowaRezerwacja","id_pasazer","setIdPasazer","setIdLot","setMiejsce","setWolneMsc","setIdRez","setSamolot","lt","ItemListerPracownicy","pracownicy","pracownik","stanowisko","ItemListerZaloga","zaloga","ItemListerPasazerowie","pasazerowie","pas","AdminPanel","bagaz","setBagaz","setPracownicy","ID","setID","setZaloga","setPasazerowie","App","src","header","width","alt","to","extact","path","component","Boolean","window","location","hostname","match","io","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d46306b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header.c1f9005b.png\";","import React, {useState} from 'react';\r\nimport '../../style/style.css'\r\n\r\nfunction DodajPasazera(){\r\n\r\n    const [pasazer, setPasazer] = useState([]);\r\n    const [imie, setImie] = useState('');\r\n    const [nazwisko, setNazwisko] = useState('');\r\n    const [pesel, setPesel] = useState(0);\r\n    const [obywatelstwo, setObywatelstwo] = useState('');\r\n\r\n    function handleImieChange(event) {\r\n        setImie(event.target.value);\r\n    }\r\n    function handleNazwiskoChange(event) {\r\n        setNazwisko(event.target.value);\r\n    }\r\n    function handlePeselChange(event) {\r\n        setPesel(event.target.value);\r\n    }\r\n    function handleObywatelstwoChange(event) {\r\n        setObywatelstwo(event.target.value);\r\n    }\r\n\r\n    function getDane(){\r\n\r\n      fetch(`http://localhost:8090/pasazer/id`)\r\n      .then(res => {\r\n        console.log(res);\r\n        return res.json()}) //result\r\n      .then(json => {\r\n          setPasazer(json);\r\n      });\r\n  \r\n    }\r\n\r\n    function handleSubmit(){\r\n    \r\n           fetch('http://localhost:8090/pasazer', {\r\n              method: 'POST',\r\n              headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({\r\n                imie,\r\n                nazwisko,\r\n                pesel,\r\n                obywatelstwo\r\n              }),\r\n            });\r\n    }\r\n\r\n    \r\n\r\n\r\n    return (\r\n      <div>\r\n\r\n          <form onSubmit={handleSubmit}>\r\n              <label htmlFor=\"imie\">Imię: </label>\r\n              <input id=\"imie\" type=\"text\" value={imie} autoComplete=\"off\"\r\n                  onChange={handleImieChange}/>\r\n\r\n      \r\n              <label htmlFor=\"nazwisko\">Nazwisko: </label>\r\n              <input id=\"nazwisko\" type=\"text\" value={nazwisko} autoComplete=\"off\"\r\n                  onChange={handleNazwiskoChange}/>\r\n      \r\n              <label htmlFor=\"pesel\">Pesel:</label>\r\n              <input id=\"pesel\" type=\"text\" value={pesel} autoComplete=\"off\"\r\n                  onChange={handlePeselChange}/>\r\n\r\n              <label htmlFor=\"obywatelstwo\">Obywatelstwo:</label>\r\n              <input id=\"obywatelstwo\" type=\"text\" value={obywatelstwo} autoComplete=\"off\"\r\n                  onChange={handleObywatelstwoChange}/>\r\n      \r\n              <button>Potwierdź zapis</button>\r\n            </form>\r\n\r\n\r\n            <button onClick={getDane}>Pobierz swoje ID</button>\r\n            <ItemListerPasazer pasazer={pasazer}/>\r\n\r\n            \r\n          </div>\r\n    )\r\n}\r\n\r\nconst ItemListerPasazer = props => <h2> {props.pasazer} </h2>;\r\n\r\n\r\nexport default DodajPasazera;\r\n\r\n","import React, {useState} from 'react';\r\nimport '../../style/style.css'\r\n\r\nfunction DodajBagaz(props){\r\n\r\n    const [id_rezerwacja, setId] = useState(0);\r\n    const [waga, setWaga] = useState(0);\r\n\r\n    function handleIdChange(event) {\r\n        setId(event.target.value);\r\n    }\r\n    function handleWagaChange(event) {\r\n        setWaga(event.target.value);\r\n    }\r\n\r\n    function handleSubmit(){\r\n    \r\n           fetch('http://localhost:8090/bagaz', {\r\n              method: 'POST',\r\n              headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({\r\n                id_rezerwacja,\r\n                waga\r\n              }),\r\n            });\r\n\r\n\r\n\r\n\r\n\r\n//to test if it works \r\n            fetch(`http://localhost:8090/rezerwacjaUpdate/${id_rezerwacja}`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    id_rezerwacja\r\n                }),\r\n                headers: {\r\n                  \"Content-type\": \"application/json; charset=UTF-8\"\r\n                }\r\n            }).then(response => {\r\n                            return response.json()\r\n            })\r\n\r\n    }\r\n\r\n    //function updateRezerwacja(){\r\n        // fetch(`http://localhost:8090/rezerwacjaUpdate/${id_rezerwacja}`, {\r\n\t\t// \tmethod: 'PUT',\r\n\t\t// \tbody: JSON.stringify({\r\n\t\t// \t\tid_rezerwacja\r\n\t\t// \t}),\r\n\t\t// \theaders: {\r\n\t\t// \t  \"Content-type\": \"application/json; charset=UTF-8\"\r\n\t\t// \t}\r\n\t\t// }).then(response => {\r\n\t\t// \t\t\t\treturn response.json()\r\n\t\t// })\r\n    //}\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"id_rez\">Numer ID Twojej rezerwacji: </label>\r\n                <input id=\"id_rez\" type=\"text\" value={id_rezerwacja} autoComplete=\"off\"\r\n                    onChange={handleIdChange}/>\r\n\r\n        \r\n                <label htmlFor=\"waga\">Waga bagażu: </label>\r\n                <input id=\"waga\" type=\"text\" value={waga} autoComplete=\"off\"\r\n                    onChange={handleWagaChange}/>\r\n        \r\n                <button >Dodaj bagaż</button>\r\n            </form>\r\n\r\n            {/* <button onClick={updateRezerwacja}>Dodaj do swojej rezerwacji</button> */}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default DodajBagaz;\r\n\r\n","import React, {useState} from 'react';\r\nimport '../../style/loty.css'\r\n\r\n\r\nfunction ListaLotow (){\r\n\r\n\r\n    const [miasto, setMiasto] = useState('')\r\n    const [loty, setLoty] = useState([])\r\n\r\n\r\n    function handleMiastoChange(event){\r\n        setMiasto(event.target.value);\r\n\r\n        \r\n\r\n        event.preventDefault();\r\n        fetch(`http://localhost:8090/przylot/${miasto}`, {\r\n            method: \"GET\",\r\n            dataType: \"JSON\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json; charset=utf-8\",\r\n            }\r\n          })\r\n        .then(res => { \r\n            return res.json()\r\n        }) //result\r\n        .then(json => {\r\n            setLoty(json)\r\n        });\r\n\r\n    }\r\n\r\n    function handleMiastoChange2(event){\r\n      setMiasto(event.target.value);\r\n\r\n      event.preventDefault();\r\n      fetch(`http://localhost:8090/wylot/${miasto}`, {\r\n          method: \"GET\",\r\n          dataType: \"JSON\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json; charset=utf-8\",\r\n          }\r\n        })\r\n      .then(res => { \r\n          return res.json()\r\n      }) //result\r\n      .then(json => {\r\n          setLoty(json)\r\n      });\r\n\r\n  }\r\n\r\n    function handleSubmit(event){\r\n      event.preventDefault();\r\n      fetch(`http://localhost:8090/lot`, {\r\n          method: \"GET\",\r\n          dataType: \"JSON\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json; charset=utf-8\",\r\n          }\r\n        })\r\n      .then(res => { \r\n          return res.json()\r\n      }) //result\r\n      .then(json => {\r\n          setLoty(json)\r\n      });\r\n      }\r\n    \r\n    return (\r\n        <div>\r\n\r\n              <div className=\"flights-list-default\">\r\n                <div className=\"label\">\r\n                  <form>\r\n                      <button className=\"link-to\" name=\"wszystkie-loty\" value=\"all\" onClick={handleSubmit}>Wszystkie loty</button>\r\n                      <button className=\"link-to\" name=\"miasto-wylot\" value=\"WMI\" onClick={handleMiastoChange2}>Z Warszawy (WMI)</button>\r\n                      <button className=\"link-to\" name=\"miasto-wylot\" value=\"CRL\" onClick={handleMiastoChange2}>Z Brukseli (CRL)</button>\r\n                      <button className=\"link-to\" name=\"miasto-wylot\" value=\"LUZ\" onClick={handleMiastoChange2}>Z Lublina (LUZ)</button>\r\n                  </form>\r\n                </div> \r\n                <div className=\"label\">\r\n                  <form>\r\n                      <button className=\"link-to\" name=\"miasto-wylot\" value=\"LBA\" onClick={handleMiastoChange}>Do Leeds (LBA)</button>\r\n                      <button className=\"link-to\" name=\"miasto-wylot\" value=\"CRL\" onClick={handleMiastoChange}>Do Brukseli (CRL)</button>\r\n                      <button className=\"link-to\" name=\"miasto-wylot\" value=\"WMI\" onClick={handleMiastoChange}>Do Warszawy(WMI)</button>\r\n                      <button className=\"link-to\" name=\"miasto-wylot\" value=\"ANR\" onClick={handleMiastoChange}>Do Antwerpii (ANR)</button>\r\n                      <button className=\"link-to\" name=\"miasto-wylot\" value=\"RMI\" onClick={handleMiastoChange}>Do Rimini (RMI)</button>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n\r\n            <ItemListerLot loty={loty}/>\r\n\r\n        </div>\r\n\r\n    )\r\n  \r\n}\r\n\r\nconst ItemListerLot = props =>  <div>\r\n    { props.loty.map(lot => (\r\n                <div id=\"lista-lotow\" key={lot.id_lot}>\r\n                <div className=\"title0\">Nr lotu:  { lot.id_lot }</div>\r\n                  <div className=\"label\">\r\n                    <div className=\"title1\">Wylot</div>\r\n                    <div className = \"title2\">Lotnisko: { lot.lotnisko_wylot } </div>\r\n                    <div className = \"title2\">Data: { lot.wylot } </div>\r\n                  </div>\r\n\r\n                  <div className=\"label\">\r\n                    <div className=\"title1\">Przylot</div>\r\n                    <div className = \"title2\">Lotnisko: { lot.lotnisko_przylot } </div>\r\n                    <div className = \"title2\">Data: { lot.przylot } </div>\r\n                  </div>\r\n\r\n              </div>\r\n    ))}\r\n    {/* {props.loty.lenght === 0 && <div> Nie znaleziono lotów </div>} */}\r\n    </div> \r\n\r\n\r\nexport default ListaLotow;","import React, {useState} from 'react';\r\n\r\nimport '../../style/loty.css'\r\nimport ListaLotow from './ListaLotow'\r\n\r\n\r\nfunction SzukajLotow (){\r\n\r\n\r\n    const [wylot, setWylot] = useState('')\r\n    const [przylot, setPrzylot] = useState('')\r\n    const [loty, setLoty] = useState([])\r\n\r\n\r\n    function handleWylotChange(event){\r\n        setWylot(event.target.value);\r\n    }\r\n\r\n    function handlePrzylotChange(event){\r\n        setPrzylot(event.target.value);\r\n    }\r\n\r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault();\r\n        console.log(wylot, przylot)\r\n\r\n        fetch(`http://localhost:8090/lot/${wylot}/${przylot}`, {\r\n            method: \"GET\",\r\n            dataType: \"JSON\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json; charset=utf-8\",\r\n            }\r\n          })\r\n        .then(res => { \r\n            return res.json()\r\n        }) //result\r\n        .then(json => {\r\n            setLoty(json)\r\n        });\r\n        }\r\n    \r\n    return (\r\n        <div>\r\n  \r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"wylot\">Miejsce wylotu: </label>\r\n                <input id=\"wylot\" type=\"text\" value={wylot} autoComplete=\"off\"\r\n                    onChange={handleWylotChange}/>\r\n  \r\n        \r\n                <label htmlFor=\"przylot\">Miejsce przylotu: </label>\r\n                <input id=\"przylot\" type=\"text\" value={przylot} autoComplete=\"off\"\r\n                    onChange={handlePrzylotChange}/>\r\n        \r\n                <button>Szukaj połączenia</button>\r\n              </form>\r\n\r\n            <ItemListerLot loty={loty}/>\r\n\r\n\r\n            <ListaLotow />\r\n\r\n        </div>\r\n\r\n    )\r\n  \r\n}\r\n\r\nconst ItemListerLot = props =>  <div>\r\n    { props.loty.map(lot => (\r\n                <div id=\"lista-lotow\" key={lot.id_lot}>\r\n                <div className=\"title0\">Nr lotu:  { lot.id_lot }</div>\r\n                  <div className=\"label\">\r\n                    <div className=\"title1\">Wylot</div>\r\n                    <div className = \"title2\">Lotnisko: { lot.lotnisko_wylot } </div>\r\n                    <div className = \"title2\">Data: { lot.wylot } </div>\r\n                  </div>\r\n\r\n                  <div className=\"label\">\r\n                    <div className=\"title1\">Przylot</div>\r\n                    <div className = \"title2\">Lotnisko: { lot.lotnisko_przylot } </div>\r\n                    <div className = \"title2\">Data: { lot.przylot } </div>\r\n                  </div>\r\n\r\n              </div>\r\n    ))}\r\n    {/* {props.loty.lenght === 0 && <div> Nie znaleziono lotów </div>} */}\r\n    </div> \r\n\r\n\r\nexport default SzukajLotow;","import React, {Component} from 'react'\r\nimport '../../style/mainPage.css'\r\n\r\nclass Instrukcja extends Component {\r\n  render(){\r\n\r\n      return (\r\n\r\n\r\n            <div id=\"description\">\r\n                <div id = \"desc-2\">Jak zarezerwować lot:</div>\r\n                <ul id=\"desc\" >\r\n                    <li>Wyszukaj interesujące Cię połączenie w zakładce 'Szukaj lotów'</li>\r\n                    <li>Wpisz swoje dane w zakładce 'Zarejestruj się'</li>\r\n                    <li>Potwierdź zapis i pobierz swoje ID.</li>\r\n                    <li>Przejdź do zakładki 'Rezerwacje' i uzupełnij pola zgodnie z opisem. </li>\r\n                    <li>W zakładce 'Dodaj bagaż' masz możliwość dodania bagażu nadanego. Brak dodania bagażu oznacza, że podróżnujesz jedynie z bagażem podręcznym.</li>\r\n                </ul>\r\n            </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Instrukcja;\r\n","import React, {useState} from 'react';\r\nimport '../../style/style.css'\r\n\r\nfunction NowaRezerwacja(){\r\n\r\n    const [id_pasazer, setIdPasazer] = useState(0);\r\n    const [id_lot, setIdLot] = useState(0);\r\n    const [miejsce, setMiejsce] = useState('');\r\n\r\n    const [wolneMsc, setWolneMsc] = useState([]);\r\n\r\n    const [id_rez, setIdRez] = useState([])\r\n\r\n    const [samolot, setSamolot] = useState([])\r\n\r\n    function handleIdPasazerChange(event){\r\n        setIdPasazer(event.target.value);\r\n    }\r\n    function handleIdLotChange(event){\r\n        setIdLot(event.target.value);\r\n    }\r\n    function handleMiejsceChange(event){\r\n        setMiejsce(event.target.value);\r\n    }\r\n  \r\n\r\n    function getMiejsce(event){\r\n        event.preventDefault();\r\n        console.log(id_lot)\r\n        fetch(`http://localhost:8090/miejsca/${id_lot}`, {\r\n        method: \"GET\",\r\n        dataType: \"JSON\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json; charset=utf-8\",\r\n         }\r\n        })\r\n        .then(res => { \r\n            return res.json()\r\n        }) \r\n        .then(json => {\r\n            setWolneMsc(json)\r\n        });\r\n    }\r\n\r\n    function handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch('http://localhost:8090/rezerwacja', {\r\n            method: 'POST',\r\n            headers: {\r\n              Accept: 'application/json',\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              id_pasazer,\r\n              id_lot,\r\n              miejsce\r\n            }),\r\n          });\r\n\r\n        updateMiejsca(miejsce, id_lot);      \r\n    }\r\n\r\n    function updateMiejsca(msc, lt){\r\n        console.log(msc, lt);\r\n        fetch(`http://localhost:8090/miejsca/${msc}/${lt}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            miejsce,\r\n            id_lot\r\n        }),\r\n        });        \r\n    }\r\n\r\n\r\n    function getIdRez(event){\r\n        event.preventDefault();\r\n        fetch(`http://localhost:8090/rezerwacja/id`)\r\n        .then(res => {\r\n          console.log(res);\r\n          return res.json()}) \r\n        .then(json => {\r\n            setIdRez(json);\r\n        });\r\n    }\r\n    \r\n    function getDaneSamolot(event){\r\n        event.preventDefault();\r\n\r\n\r\n        fetch(`http://localhost:8090/samolot/${id_lot}`, {\r\n            method: \"GET\",\r\n            dataType: \"JSON\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json; charset=utf-8\",\r\n            }\r\n          })\r\n        .then(res => { \r\n            return res.json()\r\n        }) \r\n        .then(json => {\r\n            setSamolot(json)\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className=\"label1\">\r\n\r\n                <form onSubmit={getMiejsce}>\r\n\r\n                <label htmlFor=\"id_lot\">Wprowadź ID wybranego lotu: </label>\r\n                    <input id=\"id_lot\" type=\"text\" value={id_lot} autoComplete=\"off\"\r\n                        onChange={handleIdLotChange}/>\r\n                    <button>Sprawdź wolne miejsca</button>\r\n                </form>\r\n                <ItemListerMiejsca wolneMsc={wolneMsc}/>\r\n\r\n\r\n                <div className=\"label2\"><button onClick={getDaneSamolot}>Model samolotu</button></div>\r\n                <ItemListerSamolot samolot={samolot} />\r\n\r\n            </div>\r\n\r\n            <div className=\"label2\">\r\n                <form onSubmit={handleSubmit}>\r\n\r\n                    <label htmlFor=\"id_pasazer\">Wprowadź swoje ID: </label>\r\n                    <input id=\"id_pasazer\" type=\"text\" value={id_pasazer} autoComplete=\"off\"\r\n                        onChange={handleIdPasazerChange}/>\r\n            \r\n                    <label htmlFor=\"miejsce\">Wpisz wybrane miejsce:</label>\r\n                    <input id=\"miejsce\" type=\"text\" value={miejsce} autoComplete=\"off\"\r\n                        onChange={handleMiejsceChange}/>\r\n    \r\n            \r\n                    <button className=\"rezerwacja\">Rezerwuj</button>\r\n                </form>\r\n\r\n\r\n                <button className=\"rezerwacja\" onClick={getIdRez}>Pobierz ID swojej rezerwacji</button>\r\n                <ItemListerIdRezerwacji id_rez={id_rez} />\r\n\r\n              </div>\r\n\r\n  \r\n              {/* <div className=\"label2\"><button onClick={getDaneZaloga}>Załoga samolotu</button></div>\r\n\r\n              <ItemListerZaloga zaloga={zaloga} /> */}\r\n              \r\n            </div>\r\n      )\r\n}\r\n\r\nconst ItemListerMiejsca = props => <div>\r\n{ props.wolneMsc.map(msc => (\r\n            <div key={msc.miejsce}>\r\n                <div className=\"miejsce\">{ msc.miejsce }</div>\r\n          </div>\r\n))}\r\n</div>;\r\n\r\nconst ItemListerIdRezerwacji = props => <h2> {props.id_rez} </h2>;\r\n\r\n\r\n\r\n\r\n\r\nconst ItemListerSamolot = props => <div>\r\n{ props.samolot.map(one => (\r\n            <div id=\"lista-lotow\" key={one.id_pracownik}>\r\n                <div className = \"title2\">Marka: { one.marka } </div>\r\n                <div className = \"title2\">Model: { one.model } </div>\r\n          </div>\r\n))}\r\n</div> \r\n\r\nexport default NowaRezerwacja;","import React, {useState} from 'react';\r\nimport '../../style/style.css'\r\n\r\nfunction AdminPanel(){\r\n\r\n    const [pasazer, setPasazer] = useState(0)\r\n    const [bagaz, setBagaz] = useState(0)\r\n    const [pracownicy, setPracownicy] = useState([])\r\n\r\n    const [ID, setID] = useState(0)\r\n    const [zaloga, setZaloga] = useState([])\r\n    const [pasazerowie, setPasazerowie] = useState([])\r\n\r\n    function usunPasazera(event){\r\n        event.preventDefault();\r\n\r\n\r\n        fetch(`http://localhost:8090/usun/pasazer/${pasazer}`, {\r\n            method: \"DELETE\",\r\n            dataType: \"JSON\",\r\n          })\r\n    }\r\n\r\n    function usunBagaz(event){\r\n        event.preventDefault();\r\n        fetch(`http://localhost:8090/usun/bagaz/${bagaz}`, {\r\n            method: \"DELETE\",\r\n            dataType: \"JSON\",\r\n          })\r\n    }\r\n\r\n    function handlePasazerChange(event){\r\n        setPasazer(event.target.value)\r\n    }\r\n    function handleBagazChange(event){\r\n        setBagaz(event.target.value)\r\n    }\r\n\r\n\r\n    function getPracownikow(event){\r\n        event.preventDefault();\r\n        fetch(`http://localhost:8090/zaloga`, {\r\n        method: \"GET\",\r\n        dataType: \"JSON\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json; charset=utf-8\",\r\n        }\r\n      })\r\n    .then(res => { \r\n        return res.json()\r\n    }) \r\n    .then(json => {\r\n        setPracownicy(json)\r\n    });\r\n\r\n    }\r\n\r\n    function getPasazerow(event){\r\n        event.preventDefault();\r\n        fetch(`http://localhost:8090/pasazerowie`, {\r\n        method: \"GET\",\r\n        dataType: \"JSON\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json; charset=utf-8\",\r\n        }\r\n      })\r\n    .then(res => { \r\n        return res.json()\r\n    }) \r\n    .then(json => {\r\n        setPasazerowie(json)\r\n    });\r\n\r\n    }\r\n\r\n    function getDaneZaloga(event){\r\n        event.preventDefault();\r\n\r\n        fetch(`http://localhost:8090/zaloga/${ID}`, {\r\n            method: \"GET\",\r\n            dataType: \"JSON\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json; charset=utf-8\",\r\n            }\r\n          })\r\n        .then(res => { \r\n            return res.json()\r\n        }) \r\n        .then(json => {\r\n            setZaloga(json)\r\n        });\r\n    }\r\n\r\n    function handleIDChange(event){\r\n        event.preventDefault();\r\n        setID(event.target.value)\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n\r\n            <div className=\"label1\">\r\n                <div className=\"title1\">Usuń pasażera z bazy:</div>\r\n                    <form onSubmit={usunPasazera}>\r\n                        <label htmlFor=\"pasazer\">ID do usunięcia: </label>\r\n                        <input id=\"pasazer\" type=\"number\" value={pasazer} autoComplete=\"off\"\r\n                            onChange={handlePasazerChange}/>\r\n                        <button>Potwierdź</button>\r\n                    </form>\r\n\r\n                <div className=\"title1\">Usuń bagaż z bazy:</div>\r\n                    <form onSubmit={usunBagaz}>\r\n                        <label htmlFor=\"bagaz\">ID do usunięcia: </label>\r\n                        <input id=\"bagaz\" type=\"number\" value={bagaz} autoComplete=\"off\"\r\n                            onChange={handleBagazChange}/>\r\n                        <button>Potwierdź</button>\r\n                    </form>\r\n\r\n                <button id='pracownicy-lista' onClick={getPasazerow}>Wyświetl wszystkich pasażerów</button>\r\n                <ItemListerPasazerowie pasazerowie={pasazerowie}/>\r\n\r\n            </div>\r\n\r\n            <div className=\"label2\">\r\n\r\n                <button id='pracownicy-lista' onClick={getPracownikow}>Wyświetl wszystkich pracowników</button>\r\n                <ItemListerPracownicy pracownicy={pracownicy}/>\r\n\r\n                <form onSubmit={getDaneZaloga}>\r\n                    <label className=\"title1\" htmlFor=\"zaloga\">Wybierz nr lotu aby wyświetlić załogę </label>\r\n                        <input id=\"zaloga\" type=\"number\" value={ID} autoComplete=\"off\"\r\n                            onChange={handleIDChange}/>\r\n                        <button>Wyświetl załogę</button>\r\n                </form>\r\n                <ItemListerZaloga zaloga={zaloga} /> \r\n\r\n\r\n\r\n            </div>\r\n  \r\n              \r\n        </div>\r\n      );\r\n}\r\n\r\nconst ItemListerPracownicy = props =>  <div>\r\n    { props.pracownicy.map(pracownik => (\r\n                <div id=\"lista-pracownikow\" key={pracownik.id_pracownik}>\r\n                  <div className=\"label\">\r\n                    <div className=\"title1\">ID: { pracownik.id_pracownik }</div>\r\n                    <div className = \"title2\">Imie: { pracownik.imie } </div>\r\n                    <div className = \"title2\">Nazwisko: { pracownik.nazwisko } </div>\r\n                    <div className = \"title2\">Stanowisko: { pracownik.stanowisko } </div>\r\n                    <div className = \"title2\">Obywatelstwo: { pracownik.obywatelstwo } </div>\r\n                  </div>\r\n\r\n              </div>\r\n    ))}\r\n    </div>;\r\n\r\nconst ItemListerZaloga = props => <div>\r\n        { props.zaloga.map(one => (\r\n            <div id=\"lista-pracownikow\" key={one.id_pracownik}>\r\n                  <div className=\"label\">\r\n                    <div className=\"title1\">ID: { one.id_pracownik }</div>\r\n                    <div className = \"title2\">Imie: { one.imie } </div>\r\n                    <div className = \"title2\">Nazwisko: { one.nazwisko } </div>\r\n                    <div className = \"title2\">Stanowisko: { one.stanowisko } </div>\r\n                    <div className = \"title2\">Obywatelstwo: { one.obywatelstwo } </div>\r\n                  </div>\r\n\r\n          </div>\r\n    ))}\r\n    </div>;\r\n\r\n\r\nconst ItemListerPasazerowie = props => <div>\r\n        { props.pasazerowie.map(pas => (\r\n            <div id=\"lista-pracownikow\" key={pas.id_pasazer}>\r\n                  <div className=\"label\">\r\n                    <div className=\"title1\">ID: { pas.id_pasazer }</div>\r\n                    <div className = \"title2\">Imie: { pas.imie } </div>\r\n                    <div className = \"title2\">Nazwisko: { pas.nazwisko } </div>\r\n                    <div className = \"title2\">Pesel: { pas.pesel } </div>\r\n                    <div className = \"title2\">Obywatelstwo: { pas.obywatelstwo } </div>\r\n                  </div>\r\n\r\n          </div>\r\n    ))}\r\n    </div>;\r\n\r\n\r\nexport default AdminPanel;","import React, {Component} from 'react'\r\nimport DodajPasazera from './components/rejestracja/DodajPasazera'\r\nimport DodajBagaz from './components/rejestracja/DodajBagaz'\r\nimport SzukajLotow from './components/loty/SzukajLotow'\r\nimport Instrukcja from './components/rezerwacja/Instrukcja'\r\nimport NowaRezerwacja from './components/rezerwacja/NowaRezerwacja'\r\nimport AdminPanel from './components/admin/AdminPanel'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n} from 'react-router-dom'; \r\n\r\nimport './App.css'\r\nimport header from './images/header.png'\r\n\r\nclass App extends Component {\r\n  render(){\r\n\r\n      return (\r\n        <div className=\"App\">\r\n\r\n\r\n              <div className=\"Header\">\r\n                <img src={header} width=\"700\" alt=\"header\"/>\r\n              </div>\r\n\r\n              <Router>\r\n              <div className=\"BottomMenu\">\r\n                <ul className=\"nav\">\r\n                      <li>\r\n                      <Link to=\"/Instrukcja\" >Instrukcja rezerwacji</Link>\r\n                      <Link to=\"/SzukajLotow\" >Szukaj lotów</Link>\r\n                      <Link to=\"/DodajPasazera\" >Zarejestruj się</Link>\r\n                      <Link to=\"/NowaRezerwacja\" >Rezerwacje</Link>\r\n                      <Link to=\"/DodajBagaz\" >Dodaj bagaż</Link>\r\n                      <Link to=\"/AdminPanel\">Panel administratora</Link>\r\n                  </li>\r\n                    </ul>\r\n                    \r\n                    <Route extact path=\"/Instrukcja\" component={Instrukcja} />\r\n                    <Route extact path=\"/SzukajLotow\" component={SzukajLotow} />\r\n                    <Route extact path=\"/DodajPasazera\" component={DodajPasazera} /> \r\n                    <Route extact path=\"/NowaRezerwacja\" component={NowaRezerwacja} />\r\n                    <Route extact path=\"/DodajBagaz\" component={DodajBagaz} /> \r\n                    <Route extact path=\"/AdminPanel\" component={AdminPanel}/>\r\n                </div>\r\n              </Router>\r\n\r\n            \r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport io from 'socket.io-client';\n\nconst socket = io();\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}